//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Qaroco.PL.QarocoServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QarocoServiceReference.IQarocoService")]
    public interface IQarocoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserLogin", ReplyAction="http://tempuri.org/IQarocoService/UserLoginResponse")]
        Qaroco.DL.User UserLogin(Qaroco.DL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserLogin", ReplyAction="http://tempuri.org/IQarocoService/UserLoginResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.User> UserLoginAsync(Qaroco.DL.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserEdit", ReplyAction="http://tempuri.org/IQarocoService/UserEditResponse")]
        bool UserEdit(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserEdit", ReplyAction="http://tempuri.org/IQarocoService/UserEditResponse")]
        System.Threading.Tasks.Task<bool> UserEditAsync(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserListId", ReplyAction="http://tempuri.org/IQarocoService/UserListIdResponse")]
        Qaroco.DL.User UserListId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserListId", ReplyAction="http://tempuri.org/IQarocoService/UserListIdResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.User> UserListIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserLog", ReplyAction="http://tempuri.org/IQarocoService/UserLogResponse")]
        Qaroco.DL.User UserLog(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserLog", ReplyAction="http://tempuri.org/IQarocoService/UserLogResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.User> UserLogAsync(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserList", ReplyAction="http://tempuri.org/IQarocoService/UserListResponse")]
        Qaroco.DL.User[] UserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserList", ReplyAction="http://tempuri.org/IQarocoService/UserListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.User[]> UserListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressAdd", ReplyAction="http://tempuri.org/IQarocoService/AddressAddResponse")]
        bool AddressAdd(Qaroco.DL.Address model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressAdd", ReplyAction="http://tempuri.org/IQarocoService/AddressAddResponse")]
        System.Threading.Tasks.Task<bool> AddressAddAsync(Qaroco.DL.Address model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressDelete", ReplyAction="http://tempuri.org/IQarocoService/AddressDeleteResponse")]
        bool AddressDelete(Qaroco.DL.Address model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressDelete", ReplyAction="http://tempuri.org/IQarocoService/AddressDeleteResponse")]
        System.Threading.Tasks.Task<bool> AddressDeleteAsync(Qaroco.DL.Address model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressList", ReplyAction="http://tempuri.org/IQarocoService/AddressListResponse")]
        Qaroco.DL.Address[] AddressList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/AddressList", ReplyAction="http://tempuri.org/IQarocoService/AddressListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Address[]> AddressListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentAdd", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentAddResponse")]
        bool BlogCommentAdd(Qaroco.DL.BlogComment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentAdd", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentAddResponse")]
        System.Threading.Tasks.Task<bool> BlogCommentAddAsync(Qaroco.DL.BlogComment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentDelete", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentDeleteResponse")]
        bool BlogCommentDelete(Qaroco.DL.BlogComment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentDelete", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentDeleteResponse")]
        System.Threading.Tasks.Task<bool> BlogCommentDeleteAsync(Qaroco.DL.BlogComment model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentList", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentListResponse")]
        Qaroco.DL.BlogComment[] BlogCommentList(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogCommentList", ReplyAction="http://tempuri.org/IQarocoService/BlogCommentListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.BlogComment[]> BlogCommentListAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogAdd", ReplyAction="http://tempuri.org/IQarocoService/BlogAddResponse")]
        bool BlogAdd(Qaroco.DL.ViewModels.BlogVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogAdd", ReplyAction="http://tempuri.org/IQarocoService/BlogAddResponse")]
        System.Threading.Tasks.Task<bool> BlogAddAsync(Qaroco.DL.ViewModels.BlogVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogDelete", ReplyAction="http://tempuri.org/IQarocoService/BlogDeleteResponse")]
        bool BlogDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogDelete", ReplyAction="http://tempuri.org/IQarocoService/BlogDeleteResponse")]
        System.Threading.Tasks.Task<bool> BlogDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogList", ReplyAction="http://tempuri.org/IQarocoService/BlogListResponse")]
        Qaroco.DL.Blog[] BlogList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogList", ReplyAction="http://tempuri.org/IQarocoService/BlogListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Blog[]> BlogListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogVMList", ReplyAction="http://tempuri.org/IQarocoService/BlogVMListResponse")]
        Qaroco.DL.ViewModels.BlogVM[] BlogVMList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogVMList", ReplyAction="http://tempuri.org/IQarocoService/BlogVMListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ViewModels.BlogVM[]> BlogVMListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogDetail", ReplyAction="http://tempuri.org/IQarocoService/BlogDetailResponse")]
        Qaroco.DL.Blog BlogDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/BlogDetail", ReplyAction="http://tempuri.org/IQarocoService/BlogDetailResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Blog> BlogDetailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionAdd", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionAddResponse")]
        bool CargoTransactionAdd(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionAdd", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionAddResponse")]
        System.Threading.Tasks.Task<bool> CargoTransactionAddAsync(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionDelete", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionDeleteResponse")]
        bool CargoTransactionDelete(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionDelete", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionDeleteResponse")]
        System.Threading.Tasks.Task<bool> CargoTransactionDeleteAsync(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionList", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionListResponse")]
        Qaroco.DL.ViewModels.CargoVM[] CargoTransactionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CargoTransactionList", ReplyAction="http://tempuri.org/IQarocoService/CargoTransactionListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoVM[]> CargoTransactionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UpdateCargo", ReplyAction="http://tempuri.org/IQarocoService/UpdateCargoResponse")]
        bool UpdateCargo(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UpdateCargo", ReplyAction="http://tempuri.org/IQarocoService/UpdateCargoResponse")]
        System.Threading.Tasks.Task<bool> UpdateCargoAsync(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CityList", ReplyAction="http://tempuri.org/IQarocoService/CityListResponse")]
        Qaroco.DL.City[] CityList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CityList", ReplyAction="http://tempuri.org/IQarocoService/CityListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.City[]> CityListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierAdd", ReplyAction="http://tempuri.org/IQarocoService/CourierAddResponse")]
        bool CourierAdd(Qaroco.DL.ViewModels.CourierVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierAdd", ReplyAction="http://tempuri.org/IQarocoService/CourierAddResponse")]
        System.Threading.Tasks.Task<bool> CourierAddAsync(Qaroco.DL.ViewModels.CourierVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierDelete", ReplyAction="http://tempuri.org/IQarocoService/CourierDeleteResponse")]
        bool CourierDelete(Qaroco.DL.Courier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierDelete", ReplyAction="http://tempuri.org/IQarocoService/CourierDeleteResponse")]
        System.Threading.Tasks.Task<bool> CourierDeleteAsync(Qaroco.DL.Courier model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierUpdate", ReplyAction="http://tempuri.org/IQarocoService/CourierUpdateResponse")]
        bool CourierUpdate(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierUpdate", ReplyAction="http://tempuri.org/IQarocoService/CourierUpdateResponse")]
        System.Threading.Tasks.Task<bool> CourierUpdateAsync(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierList", ReplyAction="http://tempuri.org/IQarocoService/CourierListResponse")]
        Qaroco.DL.Courier[] CourierList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierList", ReplyAction="http://tempuri.org/IQarocoService/CourierListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Courier[]> CourierListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticAdd", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticAddResponse")]
        bool CourierStatisticAdd(Qaroco.DL.CourierStatistic model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticAdd", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticAddResponse")]
        System.Threading.Tasks.Task<bool> CourierStatisticAddAsync(Qaroco.DL.CourierStatistic model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticDelete", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticDeleteResponse")]
        bool CourierStatisticDelete(Qaroco.DL.CourierStatistic model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticDelete", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticDeleteResponse")]
        System.Threading.Tasks.Task<bool> CourierStatisticDeleteAsync(Qaroco.DL.CourierStatistic model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticList", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticListResponse")]
        Qaroco.DL.CourierStatistic[] CourierStatisticList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CourierStatisticList", ReplyAction="http://tempuri.org/IQarocoService/CourierStatisticListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.CourierStatistic[]> CourierStatisticListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerAdd", ReplyAction="http://tempuri.org/IQarocoService/CustomerAddResponse")]
        bool CustomerAdd(Qaroco.DL.ViewModels.CustomerVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerAdd", ReplyAction="http://tempuri.org/IQarocoService/CustomerAddResponse")]
        System.Threading.Tasks.Task<bool> CustomerAddAsync(Qaroco.DL.ViewModels.CustomerVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerDelete", ReplyAction="http://tempuri.org/IQarocoService/CustomerDeleteResponse")]
        bool CustomerDelete(Qaroco.DL.Customer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerDelete", ReplyAction="http://tempuri.org/IQarocoService/CustomerDeleteResponse")]
        System.Threading.Tasks.Task<bool> CustomerDeleteAsync(Qaroco.DL.Customer model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerEdit", ReplyAction="http://tempuri.org/IQarocoService/CustomerEditResponse")]
        bool CustomerEdit(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerEdit", ReplyAction="http://tempuri.org/IQarocoService/CustomerEditResponse")]
        System.Threading.Tasks.Task<bool> CustomerEditAsync(Qaroco.DL.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerList", ReplyAction="http://tempuri.org/IQarocoService/CustomerListResponse")]
        Qaroco.DL.Customer[] CustomerList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/CustomerList", ReplyAction="http://tempuri.org/IQarocoService/CustomerListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Customer[]> CustomerListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/DistrictList", ReplyAction="http://tempuri.org/IQarocoService/DistrictListResponse")]
        Qaroco.DL.District[] DistrictList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/DistrictList", ReplyAction="http://tempuri.org/IQarocoService/DistrictListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.District[]> DistrictListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemAdd", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemAddResponse")]
        bool MessageSystemAdd(Qaroco.DL.MessageSystem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemAdd", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemAddResponse")]
        System.Threading.Tasks.Task<bool> MessageSystemAddAsync(Qaroco.DL.MessageSystem model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemDelete", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemDeleteResponse")]
        bool MessageSystemDelete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemDelete", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemDeleteResponse")]
        System.Threading.Tasks.Task<bool> MessageSystemDeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemList", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemListResponse")]
        Qaroco.DL.MessageSystem[] MessageSystemList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemList", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.MessageSystem[]> MessageSystemListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemDetail", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemDetailResponse")]
        Qaroco.DL.MessageSystem MessageSystemDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/MessageSystemDetail", ReplyAction="http://tempuri.org/IQarocoService/MessageSystemDetailResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.MessageSystem> MessageSystemDetailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderAdd", ReplyAction="http://tempuri.org/IQarocoService/OrderAddResponse")]
        bool OrderAdd(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderAdd", ReplyAction="http://tempuri.org/IQarocoService/OrderAddResponse")]
        System.Threading.Tasks.Task<bool> OrderAddAsync(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderDelete", ReplyAction="http://tempuri.org/IQarocoService/OrderDeleteResponse")]
        bool OrderDelete(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderDelete", ReplyAction="http://tempuri.org/IQarocoService/OrderDeleteResponse")]
        System.Threading.Tasks.Task<bool> OrderDeleteAsync(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderList", ReplyAction="http://tempuri.org/IQarocoService/OrderListResponse")]
        Qaroco.DL.Order[] OrderList(int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderList", ReplyAction="http://tempuri.org/IQarocoService/OrderListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Order[]> OrderListAsync(int userId, int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderUpdate", ReplyAction="http://tempuri.org/IQarocoService/OrderUpdateResponse")]
        bool OrderUpdate(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/OrderUpdate", ReplyAction="http://tempuri.org/IQarocoService/OrderUpdateResponse")]
        System.Threading.Tasks.Task<bool> OrderUpdateAsync(Qaroco.DL.Order model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/SendCargo", ReplyAction="http://tempuri.org/IQarocoService/SendCargoResponse")]
        bool SendCargo(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/SendCargo", ReplyAction="http://tempuri.org/IQarocoService/SendCargoResponse")]
        System.Threading.Tasks.Task<bool> SendCargoAsync(Qaroco.DL.ViewModels.CargoVM model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargoByCourier", ReplyAction="http://tempuri.org/IQarocoService/ListCargoByCourierResponse")]
        Qaroco.DL.ViewModels.CargoOrderVM[] ListCargoByCourier(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargoByCourier", ReplyAction="http://tempuri.org/IQarocoService/ListCargoByCourierResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoByCourierAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargoByCustomer", ReplyAction="http://tempuri.org/IQarocoService/ListCargoByCustomerResponse")]
        Qaroco.DL.ViewModels.CargoOrderVM[] ListCargoByCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargoByCustomer", ReplyAction="http://tempuri.org/IQarocoService/ListCargoByCustomerResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoByCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargo", ReplyAction="http://tempuri.org/IQarocoService/ListCargoResponse")]
        Qaroco.DL.ViewModels.CargoOrderVM[] ListCargo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ListCargo", ReplyAction="http://tempuri.org/IQarocoService/ListCargoResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureAdd", ReplyAction="http://tempuri.org/IQarocoService/PictureAddResponse")]
        bool PictureAdd(Qaroco.DL.Picture model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureAdd", ReplyAction="http://tempuri.org/IQarocoService/PictureAddResponse")]
        System.Threading.Tasks.Task<bool> PictureAddAsync(Qaroco.DL.Picture model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureDelete", ReplyAction="http://tempuri.org/IQarocoService/PictureDeleteResponse")]
        bool PictureDelete(Qaroco.DL.Picture model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureDelete", ReplyAction="http://tempuri.org/IQarocoService/PictureDeleteResponse")]
        System.Threading.Tasks.Task<bool> PictureDeleteAsync(Qaroco.DL.Picture model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureList", ReplyAction="http://tempuri.org/IQarocoService/PictureListResponse")]
        Qaroco.DL.Picture[] PictureList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/PictureList", ReplyAction="http://tempuri.org/IQarocoService/PictureListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Picture[]> PictureListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoAdd", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoAddResponse")]
        bool ProductInfoAdd(Qaroco.DL.ProductInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoAdd", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoAddResponse")]
        System.Threading.Tasks.Task<bool> ProductInfoAddAsync(Qaroco.DL.ProductInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoDelete", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoDeleteResponse")]
        bool ProductInfoDelete(Qaroco.DL.ProductInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoDelete", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoDeleteResponse")]
        System.Threading.Tasks.Task<bool> ProductInfoDeleteAsync(Qaroco.DL.ProductInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoList", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoListResponse")]
        Qaroco.DL.ProductInfo[] ProductInfoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ProductInfoList", ReplyAction="http://tempuri.org/IQarocoService/ProductInfoListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ProductInfo[]> ProductInfoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderAdd", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderAddResponse")]
        bool RegisterFolderAdd(Qaroco.DL.RegisterFolder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderAdd", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderAddResponse")]
        System.Threading.Tasks.Task<bool> RegisterFolderAddAsync(Qaroco.DL.RegisterFolder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderDelete", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderDeleteResponse")]
        bool RegisterFolderDelete(Qaroco.DL.RegisterFolder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderDelete", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderDeleteResponse")]
        System.Threading.Tasks.Task<bool> RegisterFolderDeleteAsync(Qaroco.DL.RegisterFolder model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderList", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderListResponse")]
        Qaroco.DL.RegisterFolder[] RegisterFolderList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RegisterFolderList", ReplyAction="http://tempuri.org/IQarocoService/RegisterFolderListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.RegisterFolder[]> RegisterFolderListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RoleList", ReplyAction="http://tempuri.org/IQarocoService/RoleListResponse")]
        Qaroco.DL.Role[] RoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/RoleList", ReplyAction="http://tempuri.org/IQarocoService/RoleListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Role[]> RoleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ShippingTypeList", ReplyAction="http://tempuri.org/IQarocoService/ShippingTypeListResponse")]
        Qaroco.DL.ShippingType[] ShippingTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/ShippingTypeList", ReplyAction="http://tempuri.org/IQarocoService/ShippingTypeListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.ShippingType[]> ShippingTypeListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserBankList", ReplyAction="http://tempuri.org/IQarocoService/UserBankListResponse")]
        Qaroco.DL.UserBank[] UserBankList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserBankList", ReplyAction="http://tempuri.org/IQarocoService/UserBankListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.UserBank[]> UserBankListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoAdd", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoAddResponse")]
        bool UserCardInfoAdd(Qaroco.DL.UserCardInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoAdd", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoAddResponse")]
        System.Threading.Tasks.Task<bool> UserCardInfoAddAsync(Qaroco.DL.UserCardInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoDelete", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoDeleteResponse")]
        bool UserCardInfoDelete(Qaroco.DL.UserCardInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoDelete", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoDeleteResponse")]
        System.Threading.Tasks.Task<bool> UserCardInfoDeleteAsync(Qaroco.DL.UserCardInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoList", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoListResponse")]
        Qaroco.DL.UserCardInfo[] UserCardInfoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/UserCardInfoList", ReplyAction="http://tempuri.org/IQarocoService/UserCardInfoListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.UserCardInfo[]> UserCardInfoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/LogAdd", ReplyAction="http://tempuri.org/IQarocoService/LogAddResponse")]
        bool LogAdd(Qaroco.DL.Log model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/LogAdd", ReplyAction="http://tempuri.org/IQarocoService/LogAddResponse")]
        System.Threading.Tasks.Task<bool> LogAddAsync(Qaroco.DL.Log model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/LogList", ReplyAction="http://tempuri.org/IQarocoService/LogListResponse")]
        Qaroco.DL.Log[] LogList(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQarocoService/LogList", ReplyAction="http://tempuri.org/IQarocoService/LogListResponse")]
        System.Threading.Tasks.Task<Qaroco.DL.Log[]> LogListAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQarocoServiceChannel : Qaroco.PL.QarocoServiceReference.IQarocoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QarocoServiceClient : System.ServiceModel.ClientBase<Qaroco.PL.QarocoServiceReference.IQarocoService>, Qaroco.PL.QarocoServiceReference.IQarocoService {
        
        public QarocoServiceClient() {
        }
        
        public QarocoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QarocoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QarocoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QarocoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Qaroco.DL.User UserLogin(Qaroco.DL.User user) {
            return base.Channel.UserLogin(user);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.User> UserLoginAsync(Qaroco.DL.User user) {
            return base.Channel.UserLoginAsync(user);
        }
        
        public bool UserEdit(Qaroco.DL.User model) {
            return base.Channel.UserEdit(model);
        }
        
        public System.Threading.Tasks.Task<bool> UserEditAsync(Qaroco.DL.User model) {
            return base.Channel.UserEditAsync(model);
        }
        
        public Qaroco.DL.User UserListId(int id) {
            return base.Channel.UserListId(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.User> UserListIdAsync(int id) {
            return base.Channel.UserListIdAsync(id);
        }
        
        public Qaroco.DL.User UserLog(string mail) {
            return base.Channel.UserLog(mail);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.User> UserLogAsync(string mail) {
            return base.Channel.UserLogAsync(mail);
        }
        
        public Qaroco.DL.User[] UserList() {
            return base.Channel.UserList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.User[]> UserListAsync() {
            return base.Channel.UserListAsync();
        }
        
        public bool AddressAdd(Qaroco.DL.Address model) {
            return base.Channel.AddressAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> AddressAddAsync(Qaroco.DL.Address model) {
            return base.Channel.AddressAddAsync(model);
        }
        
        public bool AddressDelete(Qaroco.DL.Address model) {
            return base.Channel.AddressDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> AddressDeleteAsync(Qaroco.DL.Address model) {
            return base.Channel.AddressDeleteAsync(model);
        }
        
        public Qaroco.DL.Address[] AddressList() {
            return base.Channel.AddressList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Address[]> AddressListAsync() {
            return base.Channel.AddressListAsync();
        }
        
        public bool BlogCommentAdd(Qaroco.DL.BlogComment model) {
            return base.Channel.BlogCommentAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> BlogCommentAddAsync(Qaroco.DL.BlogComment model) {
            return base.Channel.BlogCommentAddAsync(model);
        }
        
        public bool BlogCommentDelete(Qaroco.DL.BlogComment model) {
            return base.Channel.BlogCommentDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> BlogCommentDeleteAsync(Qaroco.DL.BlogComment model) {
            return base.Channel.BlogCommentDeleteAsync(model);
        }
        
        public Qaroco.DL.BlogComment[] BlogCommentList(int id) {
            return base.Channel.BlogCommentList(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.BlogComment[]> BlogCommentListAsync(int id) {
            return base.Channel.BlogCommentListAsync(id);
        }
        
        public bool BlogAdd(Qaroco.DL.ViewModels.BlogVM model) {
            return base.Channel.BlogAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> BlogAddAsync(Qaroco.DL.ViewModels.BlogVM model) {
            return base.Channel.BlogAddAsync(model);
        }
        
        public bool BlogDelete(int id) {
            return base.Channel.BlogDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> BlogDeleteAsync(int id) {
            return base.Channel.BlogDeleteAsync(id);
        }
        
        public Qaroco.DL.Blog[] BlogList() {
            return base.Channel.BlogList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Blog[]> BlogListAsync() {
            return base.Channel.BlogListAsync();
        }
        
        public Qaroco.DL.ViewModels.BlogVM[] BlogVMList() {
            return base.Channel.BlogVMList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ViewModels.BlogVM[]> BlogVMListAsync() {
            return base.Channel.BlogVMListAsync();
        }
        
        public Qaroco.DL.Blog BlogDetail(int id) {
            return base.Channel.BlogDetail(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Blog> BlogDetailAsync(int id) {
            return base.Channel.BlogDetailAsync(id);
        }
        
        public bool CargoTransactionAdd(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.CargoTransactionAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> CargoTransactionAddAsync(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.CargoTransactionAddAsync(model);
        }
        
        public bool CargoTransactionDelete(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.CargoTransactionDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> CargoTransactionDeleteAsync(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.CargoTransactionDeleteAsync(model);
        }
        
        public Qaroco.DL.ViewModels.CargoVM[] CargoTransactionList() {
            return base.Channel.CargoTransactionList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoVM[]> CargoTransactionListAsync() {
            return base.Channel.CargoTransactionListAsync();
        }
        
        public bool UpdateCargo(Qaroco.DL.Order model) {
            return base.Channel.UpdateCargo(model);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCargoAsync(Qaroco.DL.Order model) {
            return base.Channel.UpdateCargoAsync(model);
        }
        
        public Qaroco.DL.City[] CityList() {
            return base.Channel.CityList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.City[]> CityListAsync() {
            return base.Channel.CityListAsync();
        }
        
        public bool CourierAdd(Qaroco.DL.ViewModels.CourierVM model) {
            return base.Channel.CourierAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> CourierAddAsync(Qaroco.DL.ViewModels.CourierVM model) {
            return base.Channel.CourierAddAsync(model);
        }
        
        public bool CourierDelete(Qaroco.DL.Courier model) {
            return base.Channel.CourierDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> CourierDeleteAsync(Qaroco.DL.Courier model) {
            return base.Channel.CourierDeleteAsync(model);
        }
        
        public bool CourierUpdate(Qaroco.DL.User model) {
            return base.Channel.CourierUpdate(model);
        }
        
        public System.Threading.Tasks.Task<bool> CourierUpdateAsync(Qaroco.DL.User model) {
            return base.Channel.CourierUpdateAsync(model);
        }
        
        public Qaroco.DL.Courier[] CourierList() {
            return base.Channel.CourierList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Courier[]> CourierListAsync() {
            return base.Channel.CourierListAsync();
        }
        
        public bool CourierStatisticAdd(Qaroco.DL.CourierStatistic model) {
            return base.Channel.CourierStatisticAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> CourierStatisticAddAsync(Qaroco.DL.CourierStatistic model) {
            return base.Channel.CourierStatisticAddAsync(model);
        }
        
        public bool CourierStatisticDelete(Qaroco.DL.CourierStatistic model) {
            return base.Channel.CourierStatisticDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> CourierStatisticDeleteAsync(Qaroco.DL.CourierStatistic model) {
            return base.Channel.CourierStatisticDeleteAsync(model);
        }
        
        public Qaroco.DL.CourierStatistic[] CourierStatisticList() {
            return base.Channel.CourierStatisticList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.CourierStatistic[]> CourierStatisticListAsync() {
            return base.Channel.CourierStatisticListAsync();
        }
        
        public bool CustomerAdd(Qaroco.DL.ViewModels.CustomerVM model) {
            return base.Channel.CustomerAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> CustomerAddAsync(Qaroco.DL.ViewModels.CustomerVM model) {
            return base.Channel.CustomerAddAsync(model);
        }
        
        public bool CustomerDelete(Qaroco.DL.Customer model) {
            return base.Channel.CustomerDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> CustomerDeleteAsync(Qaroco.DL.Customer model) {
            return base.Channel.CustomerDeleteAsync(model);
        }
        
        public bool CustomerEdit(Qaroco.DL.User model) {
            return base.Channel.CustomerEdit(model);
        }
        
        public System.Threading.Tasks.Task<bool> CustomerEditAsync(Qaroco.DL.User model) {
            return base.Channel.CustomerEditAsync(model);
        }
        
        public Qaroco.DL.Customer[] CustomerList() {
            return base.Channel.CustomerList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Customer[]> CustomerListAsync() {
            return base.Channel.CustomerListAsync();
        }
        
        public Qaroco.DL.District[] DistrictList() {
            return base.Channel.DistrictList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.District[]> DistrictListAsync() {
            return base.Channel.DistrictListAsync();
        }
        
        public bool MessageSystemAdd(Qaroco.DL.MessageSystem model) {
            return base.Channel.MessageSystemAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> MessageSystemAddAsync(Qaroco.DL.MessageSystem model) {
            return base.Channel.MessageSystemAddAsync(model);
        }
        
        public bool MessageSystemDelete(int id) {
            return base.Channel.MessageSystemDelete(id);
        }
        
        public System.Threading.Tasks.Task<bool> MessageSystemDeleteAsync(int id) {
            return base.Channel.MessageSystemDeleteAsync(id);
        }
        
        public Qaroco.DL.MessageSystem[] MessageSystemList() {
            return base.Channel.MessageSystemList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.MessageSystem[]> MessageSystemListAsync() {
            return base.Channel.MessageSystemListAsync();
        }
        
        public Qaroco.DL.MessageSystem MessageSystemDetail(int id) {
            return base.Channel.MessageSystemDetail(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.MessageSystem> MessageSystemDetailAsync(int id) {
            return base.Channel.MessageSystemDetailAsync(id);
        }
        
        public bool OrderAdd(Qaroco.DL.Order model) {
            return base.Channel.OrderAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> OrderAddAsync(Qaroco.DL.Order model) {
            return base.Channel.OrderAddAsync(model);
        }
        
        public bool OrderDelete(Qaroco.DL.Order model) {
            return base.Channel.OrderDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> OrderDeleteAsync(Qaroco.DL.Order model) {
            return base.Channel.OrderDeleteAsync(model);
        }
        
        public Qaroco.DL.Order[] OrderList(int userId, int roleId) {
            return base.Channel.OrderList(userId, roleId);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Order[]> OrderListAsync(int userId, int roleId) {
            return base.Channel.OrderListAsync(userId, roleId);
        }
        
        public bool OrderUpdate(Qaroco.DL.Order model) {
            return base.Channel.OrderUpdate(model);
        }
        
        public System.Threading.Tasks.Task<bool> OrderUpdateAsync(Qaroco.DL.Order model) {
            return base.Channel.OrderUpdateAsync(model);
        }
        
        public bool SendCargo(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.SendCargo(model);
        }
        
        public System.Threading.Tasks.Task<bool> SendCargoAsync(Qaroco.DL.ViewModels.CargoVM model) {
            return base.Channel.SendCargoAsync(model);
        }
        
        public Qaroco.DL.ViewModels.CargoOrderVM[] ListCargoByCourier(int id) {
            return base.Channel.ListCargoByCourier(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoByCourierAsync(int id) {
            return base.Channel.ListCargoByCourierAsync(id);
        }
        
        public Qaroco.DL.ViewModels.CargoOrderVM[] ListCargoByCustomer(int id) {
            return base.Channel.ListCargoByCustomer(id);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoByCustomerAsync(int id) {
            return base.Channel.ListCargoByCustomerAsync(id);
        }
        
        public Qaroco.DL.ViewModels.CargoOrderVM[] ListCargo() {
            return base.Channel.ListCargo();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ViewModels.CargoOrderVM[]> ListCargoAsync() {
            return base.Channel.ListCargoAsync();
        }
        
        public bool PictureAdd(Qaroco.DL.Picture model) {
            return base.Channel.PictureAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> PictureAddAsync(Qaroco.DL.Picture model) {
            return base.Channel.PictureAddAsync(model);
        }
        
        public bool PictureDelete(Qaroco.DL.Picture model) {
            return base.Channel.PictureDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> PictureDeleteAsync(Qaroco.DL.Picture model) {
            return base.Channel.PictureDeleteAsync(model);
        }
        
        public Qaroco.DL.Picture[] PictureList() {
            return base.Channel.PictureList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Picture[]> PictureListAsync() {
            return base.Channel.PictureListAsync();
        }
        
        public bool ProductInfoAdd(Qaroco.DL.ProductInfo model) {
            return base.Channel.ProductInfoAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> ProductInfoAddAsync(Qaroco.DL.ProductInfo model) {
            return base.Channel.ProductInfoAddAsync(model);
        }
        
        public bool ProductInfoDelete(Qaroco.DL.ProductInfo model) {
            return base.Channel.ProductInfoDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> ProductInfoDeleteAsync(Qaroco.DL.ProductInfo model) {
            return base.Channel.ProductInfoDeleteAsync(model);
        }
        
        public Qaroco.DL.ProductInfo[] ProductInfoList() {
            return base.Channel.ProductInfoList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ProductInfo[]> ProductInfoListAsync() {
            return base.Channel.ProductInfoListAsync();
        }
        
        public bool RegisterFolderAdd(Qaroco.DL.RegisterFolder model) {
            return base.Channel.RegisterFolderAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterFolderAddAsync(Qaroco.DL.RegisterFolder model) {
            return base.Channel.RegisterFolderAddAsync(model);
        }
        
        public bool RegisterFolderDelete(Qaroco.DL.RegisterFolder model) {
            return base.Channel.RegisterFolderDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterFolderDeleteAsync(Qaroco.DL.RegisterFolder model) {
            return base.Channel.RegisterFolderDeleteAsync(model);
        }
        
        public Qaroco.DL.RegisterFolder[] RegisterFolderList() {
            return base.Channel.RegisterFolderList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.RegisterFolder[]> RegisterFolderListAsync() {
            return base.Channel.RegisterFolderListAsync();
        }
        
        public Qaroco.DL.Role[] RoleList() {
            return base.Channel.RoleList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Role[]> RoleListAsync() {
            return base.Channel.RoleListAsync();
        }
        
        public Qaroco.DL.ShippingType[] ShippingTypeList() {
            return base.Channel.ShippingTypeList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.ShippingType[]> ShippingTypeListAsync() {
            return base.Channel.ShippingTypeListAsync();
        }
        
        public Qaroco.DL.UserBank[] UserBankList() {
            return base.Channel.UserBankList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.UserBank[]> UserBankListAsync() {
            return base.Channel.UserBankListAsync();
        }
        
        public bool UserCardInfoAdd(Qaroco.DL.UserCardInfo model) {
            return base.Channel.UserCardInfoAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> UserCardInfoAddAsync(Qaroco.DL.UserCardInfo model) {
            return base.Channel.UserCardInfoAddAsync(model);
        }
        
        public bool UserCardInfoDelete(Qaroco.DL.UserCardInfo model) {
            return base.Channel.UserCardInfoDelete(model);
        }
        
        public System.Threading.Tasks.Task<bool> UserCardInfoDeleteAsync(Qaroco.DL.UserCardInfo model) {
            return base.Channel.UserCardInfoDeleteAsync(model);
        }
        
        public Qaroco.DL.UserCardInfo[] UserCardInfoList() {
            return base.Channel.UserCardInfoList();
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.UserCardInfo[]> UserCardInfoListAsync() {
            return base.Channel.UserCardInfoListAsync();
        }
        
        public bool LogAdd(Qaroco.DL.Log model) {
            return base.Channel.LogAdd(model);
        }
        
        public System.Threading.Tasks.Task<bool> LogAddAsync(Qaroco.DL.Log model) {
            return base.Channel.LogAddAsync(model);
        }
        
        public Qaroco.DL.Log[] LogList(string email) {
            return base.Channel.LogList(email);
        }
        
        public System.Threading.Tasks.Task<Qaroco.DL.Log[]> LogListAsync(string email) {
            return base.Channel.LogListAsync(email);
        }
    }
}
